
XML Examples
************

This section shows XML payload examples for creating emulation
experiments


CPU
===

Emulation XML for the CPU contention:

   <emulation>
     <emuname>CPU_EMU</emuname>
     <emuType>Mix</emuType>
     <emuresourceType>CPU</emuresourceType>
     <!--date format: 2014-10-10T10:10:10 -->
     <emustartTime>now</emustartTime>
     <!--duration in seconds -->
     <emustopTime>120</emustopTime>

     <distributions>
      <name>CPU_Distro</name>
        <startTime>0</startTime>
        <!--duration in seconds -->
        <duration>120</duration>
        <granularity>24</granularity>
        <distribution href="/distributions/linear_incr" name="linear_incr" />
        <!--cpu utilization distribution range-->
         <startLoad>10</startLoad>
         <stopLoad>95</stopLoad>
         <emulator href="/emulators/lookbusy" name="lookbusy" />

         <emulator-params>
           <!--more parameters will be added -->
           <resourceType>CPU</resourceType>
          <!--Number of CPUs to keep busy (default: autodetected)-->
          <ncpus>0</ncpus>
         </emulator-params>
     </distributions>

     <log>
      <!-- Use value "1" to enable logging(by default logging is off)  -->
      <enable>1</enable>
      <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
      <frequency>1</frequency>
      <logLevel>debug</logLevel>
     </log>

   </emulation>


I/O
===

Emulation XML for the I/O contention:

   <emulation>
     <emuname>IO_EMU</emuname>
     <emuType>Mix</emuType>
     <emuresourceType>IO</emuresourceType>
     <!--date format: 2014-10-10T10:10:10 -->
     <emustartTime>now</emustartTime>
     <!--duration in seconds -->
     <emustopTime>60</emustopTime>

     <distributions>

      <name>IO_Distro</name>
        <startTime>0</startTime>
        <!--duration in seconds -->
        <duration>60</duration>
        <granularity>5</granularity>
        <distribution href="/distributions/linear_incr" name="linear_incr" />
         <startLoad>1</startLoad>
         <stopLoad>10</stopLoad>
         <emulator href="/emulators/lookbusy" name="lookbusy" />

         <emulator-params>
           <!--more parameters will be added -->
           <resourceType>IO</resourceType>
          <!--Size of blocks to use for I/O, in MB-->
          <ioBlockSize>10</ioBlockSize>
          <!--Time to sleep between iterations, in msec-->
          <ioSleep>100</ioSleep>
         </emulator-params>

     </distributions>

     <log>
      <!-- Use value "1" to enable logging(by default logging is off)  -->
      <enable>1</enable>
      <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
      <frequency>3</frequency>
      <logLevel>debug</logLevel>
     </log>

   </emulation>

2nd example using *trapezoidal* distribution:

   <emulation>
     <emuname>IO_EMU</emuname>
     <emuType>Mix</emuType>
     <emuresourceType>IO</emuresourceType>
     <!--date format: 2014-10-10T10:10:10 -->
     <emustartTime>now</emustartTime>
     <!--duration in seconds -->
     <emustopTime>60</emustopTime>

     <distributions>

      <name>IO_Distro</name>
        <startTime>0</startTime>
        <!--duration in seconds -->
        <duration>60</duration>
        <granularity>5</granularity>
        <distribution href="/distributions/trapezoidal" name="trapezoidal" />
         <startLoad>1</startLoad>
         <stopLoad>10</stopLoad>
         <emulator href="/emulators/lookbusy" name="lookbusy" />

         <emulator-params>
           <!--more parameters will be added -->
           <resourceType>IO</resourceType>
          <!--Size of blocks to use for I/O, in MB-->
          <ioBlockSize>10</ioBlockSize>
          <!--Time to sleep between iterations, in msec-->
          <ioSleep>100</ioSleep>
         </emulator-params>

     </distributions>

     <log>
      <!-- Use value "1" to enable logging(by default logging is off)  -->
      <enable>1</enable>
      <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
      <frequency>3</frequency>
      <logLevel>debug</logLevel>
     </log>

   </emulation>


Memory
======

Emulation XML for the memory contention:

   <emulation>
     <emuname>MEM_EMU</emuname>
     <emuType>Mix</emuType>
     <emuresourceType>MEM</emuresourceType>
     <!--date format: 2014-10-10T10:10:10 -->
     <emustartTime>now</emustartTime>
     <!--duration in seconds -->
     <emustopTime>60</emustopTime>

     <distributions >
        <name>MEM_Distro</name>
        <startTime>0</startTime>
        <!--duration in seconds -->
        <duration>60</duration>
        <granularity>5</granularity>
        <distribution href="/distributions/linear_incr" name="linear_incr" />
        <!--Megabytes for memory -->
         <startLoad>100</startLoad>
         <stopLoad>1000</stopLoad>
         <emulator href="/emulators/lookbusy" name="lookbusy" />
         <emulator-params>
           <resourceType>MEM</resourceType>
          <!--time between iterations in usec (default 1000)-->
          <malloclimit>4004</malloclimit>
         <memSleep>0</memSleep>
         </emulator-params>
     </distributions>

     <log>
      <!-- Use value "1" to enable logging(by default logging is off)  -->
      <enable>1</enable>
      <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
      <frequency>3</frequency>
      <logLevel>debug</logLevel>
     </log>

   </emulation>

2nd example using *trapezoidal* distribution:

   <emulation>
     <emuname>MEM_EMU</emuname>
     <emuType>Mix</emuType>
     <emuresourceType>MEM</emuresourceType>
     <!--date format: 2014-10-10T10:10:10 -->
     <emustartTime>now</emustartTime>
     <!--duration in seconds -->
     <emustopTime>60</emustopTime>

     <distributions >
        <name>MEM_Distro</name>
        <startTime>0</startTime>
        <!--duration in seconds -->
        <duration>60</duration>
        <granularity>5</granularity>
        <distribution href="/distributions/trapezoidal" name="trapezoidal" />
        <!--Megabytes for memory -->
         <startLoad>100</startLoad>
         <stopLoad>1000</stopLoad>
         <malloclimit>4000</malloclimit>
         <emulator href="/emulators/lookbusy" name="lookbusy" />
         <emulator-params>
           <resourceType>MEM</resourceType>
          <!--time between iterations in usec (default 1000)-->
         <memSleep>0</memSleep>
         </emulator-params>
     </distributions>

     <log>
      <!-- Use value "1" to enable logging(by default logging is off)  -->
      <enable>0</enable>
      <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
      <frequency>3</frequency>
      <logLevel>debug</logLevel>
     </log>

   </emulation>


Network
=======

For this emulation to work you need to deploy two COCOMA VM's. One
will act as a client (the one where XML is sent) and the other will
act as a server. Emulation XML for the network contention:

   <emulation>
     <emuname>NET_emu</emuname>
     <emuType>Mix</emuType>
     <emuresourceType>NET</emuresourceType>
     <!--2014-02-02T10:10:10-->
     <emustartTime>now</emustartTime>
     <!--duration in seconds -->
     <emustopTime>155</emustopTime>

     <distributions>
      <name>NET_distro</name>
        <startTime>0</startTime>
        <!--duration in seconds -->
        <duration>150</duration>
        <granularity>10</granularity>
        <distribution href="/distributions/linear" name="linear" />
      <!--cpu utilization distribution range-->
         <startLoad>100</startLoad>
         <!-- set target bandwidth to bits per sec -->
         <stopLoad>1000</stopLoad>
         <emulator href="/emulators/iperf" name="iperf" />
       <emulator-params>
           <resourceType>NET</resourceType>
           <serverip>10.55.164.223</serverip>
      <!--Leave "0" for default 5001 port -->
      <serverport>5001</serverport>
           <clientip>127.0.0.1</clientip>
      <clientport>5001</clientport>
           <packettype>UDP</packettype>
       </emulator-params>
     </distributions>

     <log>
      <!-- Use value "1" to enable logging(by default logging is off)  -->
      <enable>0</enable>
      <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
      <frequency>3</frequency>
     </log>

   </emulation>


Multiple Distributions
======================

You can create multiple distributions within one emulation. This
allows to specify contention properties for multiple resources or
create different patterns for the same resource. Distributions can
overlap, meaning two distributions can run in the same time frame. If
distributions for the same resource will overlap, the runs might crash
if not enough resources available.

* CPU and Memory example

          <emulation>
              <emuname>CPU_and_Mem</emuname>
              <emutype>Mix</emutype>
              <emuresourceType>CPU</emuresourceType>
              <emustartTime>now</emustartTime>
              <!--duration in seconds -->
              <emustopTime>80</emustopTime>

              <distributions>
               <name>CPU_distro</name>
               <startTime>0</startTime>
               <!--duration in seconds -->
               <duration>60</duration>
               <granularity>1</granularity>
               <distribution href="/distributions/linear" name="linear" />
               <!--cpu utilization distribution range-->
               <startLoad>10</startLoad>
               <stopLoad>95</stopLoad>
               <emulator href="/emulators/lookbusy" name="lookbusy" />
               <emulator-params>
                    <!--more parameters will be added -->
                    <resourceType>CPU</resourceType>
                    <!--Number of CPUs to keep busy (default: autodetected)-->
                    <ncpus>0</ncpus>
               </emulator-params>
             </distributions>

              <distributions >
                 <name>MEM_Distro</name>
                 <startTime>20</startTime>
                 <!--duration in seconds -->
                 <duration>60</duration>
                 <granularity>5</granularity>
                 <distribution href="/distributions/linear_incr" name="linear_incr" />
                 <!--Megabytes for memory -->
                  <startLoad>100</startLoad>
                  <stopLoad>1000</stopLoad>
                  <emulator href="/emulators/lookbusy" name="lookbusy" />
                  <emulator-params>
                    <resourceType>MEM</resourceType>
                   <!--time between iterations in usec (default 1000)-->
                   <malloclimit>4004</malloclimit>
                  <memSleep>0</memSleep>
                  </emulator-params>
              </distributions>

             <log>
               <!-- Use value "1" to enable logging(by default logging is off)  -->
               <enable>1</enable>
               <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
               <frequency>3</frequency>
             </log>
          </emulation>

* CPU, MEM and IO example

          <emulation>
              <emuname>CPU_and_Mem</emuname>
              <emutype>Mix</emutype>
              <emuresourceType>CPU</emuresourceType>
              <emustartTime>now</emustartTime>
              <!--duration in seconds -->
              <emustopTime>80</emustopTime>

              <distributions>
               <name>CPU_distro</name>
               <startTime>0</startTime>
               <!--duration in seconds -->
               <duration>60</duration>
               <granularity>1</granularity>
               <distribution href="/distributions/linear" name="linear" />
               <!--cpu utilization distribution range-->
               <startLoad>10</startLoad>
               <stopLoad>95</stopLoad>
               <emulator href="/emulators/lookbusy" name="lookbusy" />
               <emulator-params>
                    <!--more parameters will be added -->
                    <resourceType>CPU</resourceType>
                    <!--Number of CPUs to keep busy (default: autodetected)-->
                    <ncpus>0</ncpus>
               </emulator-params>
             </distributions>

              <distributions >
                 <name>MEM_Distro</name>
                 <startTime>20</startTime>
                 <!--duration in seconds -->
                 <duration>60</duration>
                 <granularity>5</granularity>
                 <distribution href="/distributions/linear_incr" name="linear_incr" />
                 <!--Megabytes for memory -->
                  <startLoad>100</startLoad>
                  <stopLoad>1000</stopLoad>
                  <emulator href="/emulators/lookbusy" name="lookbusy" />
                  <emulator-params>
                    <resourceType>MEM</resourceType>
                   <!--time between iterations in usec (default 1000)-->
                   <malloclimit>4004</malloclimit>
                  <memSleep>0</memSleep>
                  </emulator-params>
              </distributions>

              <distributions>
               <name>IO_Distro</name>
                 <startTime>0</startTime>
                 <!--duration in seconds -->
                 <duration>60</duration>
                 <granularity>5</granularity>
                 <distribution href="/distributions/linear_incr" name="linear_incr" />
                  <startLoad>1</startLoad>
                  <stopLoad>10</stopLoad>
                  <emulator href="/emulators/lookbusy" name="lookbusy" />

                  <emulator-params>
                    <!--more parameters will be added -->
                    <resourceType>IO</resourceType>
                   <!--Size of blocks to use for I/O, in MB-->
                   <ioBlockSize>10</ioBlockSize>
                   <!--Time to sleep between iterations, in msec-->
                   <ioSleep>100</ioSleep>
                  </emulator-params>
               </distributions>

             <log>
               <!-- Use value "1" to enable logging(by default logging is off)  -->
               <enable>1</enable>
               <!-- Use seconds for setting probe intervals(if logging is enabled default is 3sec)  -->
               <frequency>3</frequency>
             </log>
          </emulation>
